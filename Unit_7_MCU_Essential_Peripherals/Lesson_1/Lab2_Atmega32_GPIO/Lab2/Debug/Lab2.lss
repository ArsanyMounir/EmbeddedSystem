
Lab2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ce  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000003cc  00000000  00000000  00000224  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000057b  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 89 00 	call	0x112	; 0x112 <main>
  64:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Delay>:
#define ReadBit(reg,bit) (reg>>bit)&1



void Delay(int time)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	2a 97       	sbiw	r28, 0x0a	; 10
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	9a 87       	std	Y+10, r25	; 0x0a
  82:	89 87       	std	Y+9, r24	; 0x09
	volatile long int _x,_y;
	for(_x=time;_x>0;_x--)
  84:	89 85       	ldd	r24, Y+9	; 0x09
  86:	9a 85       	ldd	r25, Y+10	; 0x0a
  88:	aa 27       	eor	r26, r26
  8a:	97 fd       	sbrc	r25, 7
  8c:	a0 95       	com	r26
  8e:	ba 2f       	mov	r27, r26
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	9a 83       	std	Y+2, r25	; 0x02
  94:	ab 83       	std	Y+3, r26	; 0x03
  96:	bc 83       	std	Y+4, r27	; 0x04
  98:	2a c0       	rjmp	.+84     	; 0xee <Delay+0x82>
		for(_y=time;_y>0;_y--);
  9a:	89 85       	ldd	r24, Y+9	; 0x09
  9c:	9a 85       	ldd	r25, Y+10	; 0x0a
  9e:	aa 27       	eor	r26, r26
  a0:	97 fd       	sbrc	r25, 7
  a2:	a0 95       	com	r26
  a4:	ba 2f       	mov	r27, r26
  a6:	8d 83       	std	Y+5, r24	; 0x05
  a8:	9e 83       	std	Y+6, r25	; 0x06
  aa:	af 83       	std	Y+7, r26	; 0x07
  ac:	b8 87       	std	Y+8, r27	; 0x08
  ae:	0b c0       	rjmp	.+22     	; 0xc6 <Delay+0x5a>
  b0:	8d 81       	ldd	r24, Y+5	; 0x05
  b2:	9e 81       	ldd	r25, Y+6	; 0x06
  b4:	af 81       	ldd	r26, Y+7	; 0x07
  b6:	b8 85       	ldd	r27, Y+8	; 0x08
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	a1 09       	sbc	r26, r1
  bc:	b1 09       	sbc	r27, r1
  be:	8d 83       	std	Y+5, r24	; 0x05
  c0:	9e 83       	std	Y+6, r25	; 0x06
  c2:	af 83       	std	Y+7, r26	; 0x07
  c4:	b8 87       	std	Y+8, r27	; 0x08
  c6:	8d 81       	ldd	r24, Y+5	; 0x05
  c8:	9e 81       	ldd	r25, Y+6	; 0x06
  ca:	af 81       	ldd	r26, Y+7	; 0x07
  cc:	b8 85       	ldd	r27, Y+8	; 0x08
  ce:	18 16       	cp	r1, r24
  d0:	19 06       	cpc	r1, r25
  d2:	1a 06       	cpc	r1, r26
  d4:	1b 06       	cpc	r1, r27
  d6:	64 f3       	brlt	.-40     	; 0xb0 <Delay+0x44>


void Delay(int time)
{
	volatile long int _x,_y;
	for(_x=time;_x>0;_x--)
  d8:	89 81       	ldd	r24, Y+1	; 0x01
  da:	9a 81       	ldd	r25, Y+2	; 0x02
  dc:	ab 81       	ldd	r26, Y+3	; 0x03
  de:	bc 81       	ldd	r27, Y+4	; 0x04
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	a1 09       	sbc	r26, r1
  e4:	b1 09       	sbc	r27, r1
  e6:	89 83       	std	Y+1, r24	; 0x01
  e8:	9a 83       	std	Y+2, r25	; 0x02
  ea:	ab 83       	std	Y+3, r26	; 0x03
  ec:	bc 83       	std	Y+4, r27	; 0x04
  ee:	89 81       	ldd	r24, Y+1	; 0x01
  f0:	9a 81       	ldd	r25, Y+2	; 0x02
  f2:	ab 81       	ldd	r26, Y+3	; 0x03
  f4:	bc 81       	ldd	r27, Y+4	; 0x04
  f6:	18 16       	cp	r1, r24
  f8:	19 06       	cpc	r1, r25
  fa:	1a 06       	cpc	r1, r26
  fc:	1b 06       	cpc	r1, r27
  fe:	6c f2       	brlt	.-102    	; 0x9a <Delay+0x2e>
		for(_y=time;_y>0;_y--);
}
 100:	2a 96       	adiw	r28, 0x0a	; 10
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	de bf       	out	0x3e, r29	; 62
 108:	0f be       	out	0x3f, r0	; 63
 10a:	cd bf       	out	0x3d, r28	; 61
 10c:	cf 91       	pop	r28
 10e:	df 91       	pop	r29
 110:	08 95       	ret

00000112 <main>:
#include "Utilities.h"

#define F_CPU 8000000UL

int main(void)
{
 112:	df 93       	push	r29
 114:	cf 93       	push	r28
 116:	00 d0       	rcall	.+0      	; 0x118 <main+0x6>
 118:	cd b7       	in	r28, 0x3d	; 61
 11a:	de b7       	in	r29, 0x3e	; 62
	SetBit(DDRD,5);
 11c:	a1 e3       	ldi	r26, 0x31	; 49
 11e:	b0 e0       	ldi	r27, 0x00	; 0
 120:	e1 e3       	ldi	r30, 0x31	; 49
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	80 62       	ori	r24, 0x20	; 32
 128:	8c 93       	st	X, r24
	SetBit(DDRD,6);
 12a:	a1 e3       	ldi	r26, 0x31	; 49
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	e1 e3       	ldi	r30, 0x31	; 49
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	80 64       	ori	r24, 0x40	; 64
 136:	8c 93       	st	X, r24
	SetBit(DDRD,7);
 138:	a1 e3       	ldi	r26, 0x31	; 49
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	e1 e3       	ldi	r30, 0x31	; 49
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	80 68       	ori	r24, 0x80	; 128
 144:	8c 93       	st	X, r24
	SetBit(DDRD,4);
 146:	a1 e3       	ldi	r26, 0x31	; 49
 148:	b0 e0       	ldi	r27, 0x00	; 0
 14a:	e1 e3       	ldi	r30, 0x31	; 49
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	80 61       	ori	r24, 0x10	; 16
 152:	8c 93       	st	X, r24
	volatile int x;

	while(1)
	{
		for(x=7;x>=4;x--)
 154:	87 e0       	ldi	r24, 0x07	; 7
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	9a 83       	std	Y+2, r25	; 0x02
 15a:	89 83       	std	Y+1, r24	; 0x01
 15c:	30 c0       	rjmp	.+96     	; 0x1be <main+0xac>
		{
			SetBit(PORTD,x);
 15e:	a2 e3       	ldi	r26, 0x32	; 50
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	e2 e3       	ldi	r30, 0x32	; 50
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	48 2f       	mov	r20, r24
 16a:	29 81       	ldd	r18, Y+1	; 0x01
 16c:	3a 81       	ldd	r19, Y+2	; 0x02
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <main+0x66>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	2a 95       	dec	r18
 17a:	e2 f7       	brpl	.-8      	; 0x174 <main+0x62>
 17c:	84 2b       	or	r24, r20
 17e:	8c 93       	st	X, r24
			Delay(500);
 180:	84 ef       	ldi	r24, 0xF4	; 244
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	0e 94 36 00 	call	0x6c	; 0x6c <Delay>
			ResetBit(PORTD,x);
 188:	a2 e3       	ldi	r26, 0x32	; 50
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	e2 e3       	ldi	r30, 0x32	; 50
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	48 2f       	mov	r20, r24
 194:	29 81       	ldd	r18, Y+1	; 0x01
 196:	3a 81       	ldd	r19, Y+2	; 0x02
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <main+0x90>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	2a 95       	dec	r18
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <main+0x8c>
 1a6:	80 95       	com	r24
 1a8:	84 23       	and	r24, r20
 1aa:	8c 93       	st	X, r24
			Delay(500);
 1ac:	84 ef       	ldi	r24, 0xF4	; 244
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	0e 94 36 00 	call	0x6c	; 0x6c <Delay>
	SetBit(DDRD,4);
	volatile int x;

	while(1)
	{
		for(x=7;x>=4;x--)
 1b4:	89 81       	ldd	r24, Y+1	; 0x01
 1b6:	9a 81       	ldd	r25, Y+2	; 0x02
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	9a 83       	std	Y+2, r25	; 0x02
 1bc:	89 83       	std	Y+1, r24	; 0x01
 1be:	89 81       	ldd	r24, Y+1	; 0x01
 1c0:	9a 81       	ldd	r25, Y+2	; 0x02
 1c2:	84 30       	cpi	r24, 0x04	; 4
 1c4:	91 05       	cpc	r25, r1
 1c6:	5c f6       	brge	.-106    	; 0x15e <main+0x4c>
 1c8:	c5 cf       	rjmp	.-118    	; 0x154 <main+0x42>

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
